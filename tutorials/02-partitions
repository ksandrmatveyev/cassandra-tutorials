# PARTITIONS
 - parts of data
 - grouping of data (by state as partition key)
Partitoner's job is to take a partition key and create a token

Example:
take state "texas" and send it through the system, we'll get 24 (NY - 58, CA - 83). When we done,
we now translated partition key into a token value (one of those partition ranges). And so each one of these is assigned to a different partition of data
How we determine partition scheme?
We put it a primary key. first value of primary key is a partition key, which alone not unique enough. That's why we add ID - called a clustering column
How data stored in a cluster?
each partition (because it has a partition key), is given a range of data, each partition is probably gonna live in separate node (random)

# DESRIBE TABLES
'''
DESCRIBE TABLE videos;
'''

# view the partitioner token value for each video id
'''
SELECT token(id), id
FROM videos;
'''

# CREATE TABLE HICH STORE THE DATA PARTITIONED BY TAGS
'''
CREATE TABLE videos_by_tag (
tag text,
video_id uuid,
added_date timestamp,
title text,
PRIMARY KEY ((tag), video_id)
);
'''

Cassandra only allows queries on the partition key (and clustering columns shown in the next section). Since 'title' is not the partition key, Cassandra fails the query. If Cassandra allowed querying on non-partition key columns, Cassandra would have to scan all partitions on all nodes to produce a result set (which goes against the reason you would use Cassandra in the first place).
